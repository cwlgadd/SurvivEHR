GCCcore/11.3.0
zlib/1.2.12-GCCcore-11.3.0
binutils/2.38-GCCcore-11.3.0
GCC/11.3.0
numactl/2.0.14-GCCcore-11.3.0
XZ/5.2.5-GCCcore-11.3.0
libxml2/2.9.13-GCCcore-11.3.0
libpciaccess/0.16-GCCcore-11.3.0
hwloc/2.7.1-GCCcore-11.3.0
OpenSSL/1.1
libevent/2.1.12-GCCcore-11.3.0
UCX/1.12.1-GCCcore-11.3.0
libfabric/1.15.1-GCCcore-11.3.0
PMIx/4.1.2-GCCcore-11.3.0
UCC/1.0.0-GCCcore-11.3.0
OpenMPI/4.1.4-GCC-11.3.0
OpenBLAS/0.3.20-GCC-11.3.0
FlexiBLAS/3.2.0-GCC-11.3.0
FFTW/3.3.10-GCC-11.3.0
gompi/2022a
FFTW.MPI/3.3.10-gompi-2022a
ScaLAPACK/2.2.0-gompi-2022a-fb
foss/2022a
CUDA/11.7.0
bzip2/1.0.8-GCCcore-11.3.0
ncurses/6.3-GCCcore-11.3.0
libreadline/8.1.2-GCCcore-11.3.0
ncurses/6.3-GCCcore-11.3.0
Tcl/8.6.12-GCCcore-11.3.0
SQLite/3.38.3-GCCcore-11.3.0
GMP/6.2.1-GCCcore-11.3.0
libffi/3.4.2-GCCcore-11.3.0
Python/3.10.4-GCCcore-11.3.0
pybind11/2.9.2-GCCcore-11.3.0
SciPy-bundle/2022.05-foss-2022a
libyaml/0.2.5-GCCcore-11.3.0
PyYAML/6.0-GCCcore-11.3.0
Ninja/1.10.2-GCCcore-11.3.0
protobuf/3.19.4-GCCcore-11.3.0
protobuf-python/3.19.4-GCCcore-11.3.0
MPFR/4.1.0-GCCcore-11.3.0
NASM/2.15.05-GCCcore-11.3.0
x264/20220620-GCCcore-11.3.0
LAME/3.100-GCCcore-11.3.0
x265/3.5-GCCcore-11.3.0
expat/2.4.8-GCCcore-11.3.0
libpng/1.6.37-GCCcore-11.3.0
Brotli/1.0.9-GCCcore-11.3.0
freetype/2.12.1-GCCcore-11.3.0
util-linux/2.38-GCCcore-11.3.0
fontconfig/2.14.0-GCCcore-11.3.0
freetype/2.12.1-GCCcore-11.3.0
xorg-macros/1.19.3-GCCcore-11.3.0
X11/20220504-GCCcore-11.3.0
freetype/2.12.1-GCCcore-11.3.0
fontconfig/2.14.0-GCCcore-11.3.0
FriBidi/1.0.12-GCCcore-11.3.0
FFmpeg/4.4.2-GCCcore-11.3.0
libjpeg-turbo/2.1.3-GCCcore-11.3.0
jbigkit/2.1-GCCcore-11.3.0
gzip/1.12-GCCcore-11.3.0
lz4/1.9.3-GCCcore-11.3.0
zstd/1.5.2-GCCcore-11.3.0
libdeflate/1.10-GCCcore-11.3.0
LibTIFF/4.3.0-GCCcore-11.3.0
Pillow/9.1.1-GCCcore-11.3.0
cuDNN/8.4.1.50-CUDA-11.7.0
GDRCopy/2.3-GCCcore-11.3.0
UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0
magma/2.6.2-foss-2022a-CUDA-11.7.0
NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0
expecttest/0.1.3-GCCcore-11.3.0
PyTorch/1.12.1-foss-2022a-CUDA-11.7.0
tqdm/4.64.0-GCCcore-11.3.0
Transformers/4.24.0-foss-2022a-CUDA-11.7.0
ICU/71.1-GCCcore-11.3.0
Boost/1.79.0-GCC-11.3.0
snappy/1.1.9-GCCcore-11.3.0
RapidJSON/1.1.0-GCCcore-11.3.0
RE2/2022-06-01-GCCcore-11.3.0
utf8proc/2.7.0-GCCcore-11.3.0
Arrow/8.0.0-foss-2022a
Tk/8.6.12-GCCcore-11.3.0
Tkinter/3.10.4-GCCcore-11.3.0
Qhull/2020.2-GCCcore-11.3.0
matplotlib/3.5.2-foss-2022a
polars/0.17.12-foss-2022a
poetry/1.2.2-GCCcore-11.3.0
aiohttp/3.8.3-GCCcore-11.3.0
BeautifulSoup/4.10.0-GCCcore-11.3.0
deepdiff/5.8.1-GCCcore-11.3.0
tensorboardX/2.5.1-foss-2022a
PyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0
Hydra/1.3.2-GCCcore-11.3.0
scikit-learn/1.1.2-foss-2022a
sklearn-pandas/2.2.0-foss-2022a
/rds/projects/g/gokhalkm-optimal/DataforCharles
/rds/projects/g/gokhalkm-optimal/DataforCharles
dumb
icelake
/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake
Build MM fine-tuning dataset from CPRD.db database from Version 3 of DeXTER output
INFO:root:Building study dataset on 72 CPUs and 1 GPUs
INFO:root:Creating unsupervised collator for DataModule
INFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_MultiMorbidity/
INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickle
INFO:root:Processing test split...
Added path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.
Using device: cuda.
Fitting dataset over 5 threads
is_decoder: true
data:
  batch_size: 64
  unk_freq_threshold: 0.0
  min_workers: 12
  global_diagnoses: false
  repeating_events: true
  path_to_db: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/cprd.db
  path_to_ds: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_MultiMorbidity/
  meta_information_path: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information_QuantJenny.pickle
  subsample_training: null
experiment:
  type: pre-train
  project_name: SurvivEHR
  run_id: ${head.SurvLayer}PreTrain_small_${experiment.seed}
  fine_tune_id: null
  notes: null
  tags: null
  train: true
  test: true
  verbose: true
  seed: 1337
  log: true
  log_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/
  ckpt_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/checkpoints/
  fine_tune_outcomes: null
optim:
  num_epochs: 1
  learning_rate: 0.0003
  scheduler_warmup: true
  scheduler: decaycawarmrestarts
  scheduler_periods: 10000
  learning_rate_decay: 0.8
  val_check_interval: 2500
  early_stop: true
  early_stop_patience: 30
  log_every_n_steps: 20
  limit_val_batches: 0.025
  limit_test_batches: null
  accumulate_grad_batches: 1
transformer:
  block_type: Neo
  block_size: 256
  n_layer: 6
  n_head: 6
  n_embd: 384
  layer_norm_bias: false
  attention_type: global
  bias: true
  dropout: 0.0
  attention_dropout: 0.0
  resid_dropout: 0.0
  private_heads: 0
  use_fine_tune_adapter: true
  adapter_dim: 8
head:
  SurvLayer: cr
  surv_weight: 1
  tokens_for_univariate_regression: None
  value_weight: 0.1

╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /rds/homes/g/gaddcz/Projects/CPRD/examples/data/3_build_fine_tuning_datasets │
│ /Study3_MultiMorbidity/build_dataset.py:42 in <module>                       │
│                                                                              │
│   39 │   print(OmegaConf.to_yaml(cfg))                                       │
│   40 │                                                                       │
│   41 │   # Build                                                             │
│ ❱ 42 │   dm = FoundationalDataModule(path_to_db=cfg.data.path_to_db,         │
│   43 │   │   │   │   │   │   │   │   path_to_ds=cfg.data.path_to_ds,         │
│   44 │   │   │   │   │   │   │   │   load=False,                             │
│   45 │   │   │   │   │   │   │   │   include_diagnoses=True,                 │
│                                                                              │
│ /rds/homes/g/gaddcz/Projects/FastEHR/dataloader/foundational_loader.py:124   │
│ in __init__                                                                  │
│                                                                              │
│   121 │   │   # Get the DL friendly representation, either by loading or bui │
│   122 │   │   if load is False:                                              │
│   123 │   │   │   polars_dataset = PolarsDataset(path_to_db=path_to_db)      │
│ ❱ 124 │   │   │   polars_dataset.fit(path=path_to_ds,                        │
│   125 │   │   │   │   │   │   │      overwrite_practice_ids=overwrite_practi │
│   126 │   │   │   │   │   │   │      overwrite_meta_information=overwrite_me │
│   127 │   │   │   │   │   │   │      **kwargs)                               │
│                                                                              │
│ /rds/homes/g/gaddcz/Projects/FastEHR/dataloader/dataset/dataset_polars.py:13 │
│ 6 in fit                                                                     │
│                                                                              │
│   133 │   │   │   │                                                          │
│   134 │   │   │   │   # Dataset path                                         │
│   135 │   │   │   │   path = pathlib.Path(self.save_path + f"split={split_na │
│ ❱ 136 │   │   │   │   assert not any(path.iterdir()), f"Expected empty direc │
│   137 │   │   │   │   # TODO: make directories if they dont already exist    │
│   138 │   │   │   │                                                          │
│   139 │   │   │   │   # Create parquet train/test/val dataset                │
╰──────────────────────────────────────────────────────────────────────────────╯
AssertionError: Expected empty directory 
/rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/F
ineTune_MultiMorbidity/split=test, but found 
[PosixPath('/rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/Foundat
ionalModel/FineTune_MultiMorbidity/split=test/COUNTRY=E')]
